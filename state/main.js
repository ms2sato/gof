// Generated by CoffeeScript 1.6.3
(function() {
  var PlayingStatus, StopStatus, StopWatch, StopWatchView;

  StopWatchView = (function() {
    function StopWatchView(app, el) {
      var _this = this;
      this.app = app;
      this.$el = $(el);
      this.$('.buttons button.action').click(function(event) {
        return _this.clickedButton(event);
      });
    }

    StopWatchView.prototype.$ = function(options) {
      return this.$el.find(options);
    };

    StopWatchView.prototype.clickedButton = function(event) {
      return this.app.clickedActionButton();
    };

    StopWatchView.prototype.getButton = function(index) {
      return this.$(".buttons li:eq(" + index + ") button");
    };

    StopWatchView.prototype.decoratePlayButton = function(index) {
      return this.getButton(index).text('play');
    };

    StopWatchView.prototype.decorateStopButton = function(index) {
      return this.getButton(index).text('stop');
    };

    StopWatchView.prototype.updateDisplay = function() {
      return this.$('.display').text(this.app.now);
    };

    return StopWatchView;

  })();

  StopWatch = (function() {
    function StopWatch() {}

    StopWatch.prototype.setup = function(el) {
      this.view = new StopWatchView(this, $(el));
      this.statuses = {
        stop: new StopStatus(this, this.view),
        playing: new PlayingStatus(this, this.view)
      };
      return this.changeStatus(this.statuses.stop);
    };

    StopWatch.prototype.clickedActionButton = function() {
      return this.status.clickedActionButton();
    };

    StopWatch.prototype.start = function() {
      var _this = this;
      this.now = new Date();
      this.changeStatus(this.statuses.playing);
      return this.timer = setInterval(function() {
        _this.now = new Date();
        return _this.view.updateDisplay();
      }, 200);
    };

    StopWatch.prototype.stop = function() {
      clearInterval(this.timer);
      return this.changeStatus(this.statuses.stop);
    };

    StopWatch.prototype.changeStatus = function(next) {
      this.status = next;
      return this.status.onBeforeChangeStatus();
    };

    return StopWatch;

  })();

  StopStatus = (function() {
    function StopStatus(app, view) {
      this.app = app;
      this.view = view;
    }

    StopStatus.prototype.onBeforeChangeStatus = function() {
      return this.view.decoratePlayButton(0);
    };

    StopStatus.prototype.clickedActionButton = function() {
      return this.app.start();
    };

    return StopStatus;

  })();

  PlayingStatus = (function() {
    function PlayingStatus(app, view) {
      this.app = app;
      this.view = view;
    }

    PlayingStatus.prototype.onBeforeChangeStatus = function() {
      return this.view.decorateStopButton(0);
    };

    PlayingStatus.prototype.clickedActionButton = function() {
      return this.app.stop();
    };

    return PlayingStatus;

  })();

  $(function() {
    var stopWatch;
    stopWatch = new StopWatch();
    return stopWatch.setup($('.stopwatch'));
  });

}).call(this);

/*
//@ sourceMappingURL=main.map
*/
